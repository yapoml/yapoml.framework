using OpenQA.Selenium;
using System.Linq;

namespace {{namespace}}
{
  public partial class {{name}}Page
  {
    private IWebDriver _webDriver;

    private Yapoml.Options.ISpaceOptions _spaceOptions;

    public {{name}}Page(IWebDriver webDriver, Yapoml.Options.ISpaceOptions spaceOptions)
    {
      _webDriver = webDriver;
      _spaceOptions = spaceOptions;
    }

    {{ for component in components}}
    public {{ if component.is_plural }}System.Collections.Generic.IList<{{component.name}}Component>{{ else }}{{component.name}}Component{{ end }} {{component.name}}
    {
      get
      {
        {{ if component.by.method == 'XPath' -}}
        var by = OpenQA.Selenium.By.XPath("{{ component.by.value }}");
        {{ end -}}

        {{ if component.by.method == 'Css' -}}
        var by = OpenQA.Selenium.By.CssSelector("{{ component.by.value }}");
        {{ end -}}

        {{ if component.by.method == 'Id' -}}
        var by = OpenQA.Selenium.By.Id("{{ component.by.value }}");
        {{ end -}}
        
        {{ if component.is_plural }}
        var webElements = _webDriver.FindElements(by);
        return webElements.Select(e => new {{component.name}}Component(_webDriver, e, _spaceOptions)).ToList();
        {{ else }}
        var webElement = _webDriver.FindElement(by);
        return new {{component.name}}Component(_webDriver, webElement, _spaceOptions);
        {{ end }}
      }
    }

    {{ include 'NestedComponentTemplate' component }}
    {{ end }}
  }
}